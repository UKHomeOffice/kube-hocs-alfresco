---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: hocs-data-service
  labels:
    version: {{.VERSION}}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hocs-data-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      labels:
        name: hocs-data-service
        app: {{.VERSION}}
    spec:
      containers:
      - name: hocs-data-service
        image: quay.io/ukhomeofficedigital/hocs-data-service:{{.VERSION}}
        imagePullPolicy: Always
        resources:
          limits:
            memory: 512Mi
        ports:
        - name: http
          containerPort: 8080
        env:
        - name: JAVA_OPTS
          value: '-Xms150m -Xmx250m'
        - name: SPRING_PROFILES_ACTIVE
          value: 'postgres'
        - name: SERVER_PORT
          value: '8080'
        - name: SLS_DB_HOSTNAME
          valueFrom:
            secretKeyRef:
              name: hocs-rds-access
              key: endpoint
        - name: SLS_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: hocs-rds-access
              key: username
        - name: SLS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: hocs-rds-access
              key: password
        - name: SLS_DB_NAME
          valueFrom:
            secretKeyRef:
              name: hocs-rds-access
              key: database_name
        - name: SLS_SCHEMA_NAME
          value:
            'hocs_data'
        - name: SLS_DB_PORT
          valueFrom:
            secretKeyRef:
              name: hocs-rds-access
              key: port
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
            httpHeaders:
              - name: X-probe
                value: kubelet
          initialDelaySeconds: 240
          periodSeconds: 20
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
            httpHeaders:
              - name: X-probe
                value: kubelet
          initialDelaySeconds: 240
          periodSeconds: 20
          timeoutSeconds: 10
      - name: proxy
        image: quay.io/ukhomeofficedigital/nginx-proxy:v1.7.0
        imagePullPolicy: Always
        resources:
         limits:
          memory: "100Mi"
          cpu: 100m
         requests:
          memory: "50Mi"
          cpu: 100m
        env:
          - name: PROXY_SERVICE_HOST
            value: '127.0.0.1'
          - name: PROXY_SERVICE_PORT
            value: '8080'
          - name: NAXSI_USE_DEFAULT_RULES
            value: 'FALSE'
          - name: ENABLE_UUID_PARAM
            value: 'FALSE'
          - name: ERROR_REDIRECT_CODES
            value: "599"
          - name: ADD_NGINX_SERVER_CFG
            value: |
              add_header Cache-Control private;
              add_header X-Frame-Options "SAMEORIGIN" always;
              add_header X-Content-Type-Options "nosniff" always;
              add_header X-XSS-Protection "1; mode=block" always;
          - name: SERVER_CERT
            value: /etc/nginx/secrets/hocs-data-service-bundle.pem
          - name: SERVER_KEY
            value: /etc/nginx/secrets/hocs-data-service.pem
        volumeMounts:
          - name: certs
            mountPath: /etc/nginx/secrets
            readOnly: true
        ports:
          - name: http
            containerPort: 80
          - name: https
            containerPort: 443
      - name: vault-side-kick
        image: quay.io/ukhomeofficedigital/vault-sidekick-jks:v0.2.0
        imagePullPolicy: Always
        resources:
          limits:
            memory: "100Mi"
            cpu: 100m
          requests:
            memory: "50Mi"
            cpu: 100m
        args:
          - -output=/etc/nginx/secrets
          - -tls-skip-verify=true
          - -cn=pki:services/$NAMESPACE/pki/issue/default:common_name=hocs-data-service.${NAMESPACE}.svc.cluster.local,file=/etc/nginx/secrets/hocs-data-service,fmt=bundle
        env:
          - name: VAULT_ADDR
            value: "https://vault.vault.svc.cluster.local:8200"
          - name: VAULT_TOKEN
            valueFrom:
              secretKeyRef:
                name: store-token
                key: token
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumeMounts:
          - mountPath: /etc/nginx/secrets/
            name: certs
      volumes:
        - name: certs
          emptyDir: {}
